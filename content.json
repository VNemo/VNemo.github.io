{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"https://noobnemo.live","root":"/"},"pages":[],"posts":[{"title":"","slug":"数据类型","date":"2022-10-11T06:21:34.713Z","updated":"2022-10-06T09:47:31.651Z","comments":true,"path":"2022/10/11/数据类型/","link":"","permalink":"https://noobnemo.live/2022/10/11/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","excerpt":"","text":"常用数据类型打印转换字符 数据类型 转换字符（转换说明） short %h int %d unsigned int %u long %ld unsigned long %lu long long %lld unsigned long long %llu float %f double %f scientific notation %e char %c Octal %o Hexadecimal %x Octal prefix %#o Hexadecimal prefix %#x pointer %p","categories":[],"tags":[]},{"title":"","slug":"Meaning of man page numbers","date":"2022-10-11T06:21:34.699Z","updated":"2022-10-11T14:17:37.000Z","comments":true,"path":"2022/10/11/Meaning of man page numbers/","link":"","permalink":"https://noobnemo.live/2022/10/11/Meaning%20of%20man%20page%20numbers/","excerpt":"","text":"Executable programs or shell commands System calls (functions provided by the kernel) Library calls (functions within program libraries) Special files (usually found in &#x2F;dev) File formats and conventions, e.g. &#x2F;etc&#x2F;passwd Games Miscellaneous (including macro packages and conventions), e.g.man(7), groff(7), man-pages(7) System administration commands (usually only for root) Kernel routines [Non standard] comand/*display specific section of man command*/ man &lt;number&gt; man /*display every matching page*/ man -a man","categories":[],"tags":[]},{"title":"","slug":"Linux Directory","date":"2022-10-11T06:21:34.694Z","updated":"2022-10-11T06:23:14.927Z","comments":true,"path":"2022/10/11/Linux Directory/","link":"","permalink":"https://noobnemo.live/2022/10/11/Linux%20Directory/","excerpt":"","text":"Linux DirectoryContents of the Linux root directory 目录 目录放置的内容 bin 存放系统命令的目录，如命令 cat，cp，mkdir boot 存放开机启动过程所需的内容，如开机管理程序 grub2 dev 所有设备文件的目录（如声卡、硬盘、光驱） etc 系统的主要配置文件,such as &#x2F;etc&#x2F;passwd home 用户家目录数据的存放目录 lib 存放 sbin 和 bin 目录下命令所需的库文件,存放了根文件系统程序运行所需 的共享文件。如 C 语言标准库。 lib32&#x2F;lib64 存放二进制函数库，支持 32 位&#x2F;64 位 lost+found 在 EXT3&#x2F;4 系统中，当系统意外崩溃或意外关机时，会产生一些碎片文件在这个目录下面，系统启动 fcsk 工具会检查这个目录，并修复已损坏的文件。 media 用于挂载光盘，软盘和 DVD 等设备 mnt 同 media 作用一样，用于临时挂载存储设备 opt 第三方软件安装存放目录。 proc 进程及内核信息存放目录，不占用硬盘空间。 root root 用户的家目录 run 是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件 应该被删掉或清除。 sbinroot 用户使用的命令存放目录 srv 一些网络服务所需要的数据文件 sys 同 proc 目录，用于记录 CPU 与系统硬件的相关信息 tmp 程序运行时产生的临时文件存放目录 usr 系统存放程序的目录，类似于在 windows 下的文件夹 programeﬁles var 存放内容常变动的文件目录，如系统日志文件 &#x2F;bin &#x2F;bin 目录是&#x2F;binary 的缩写，它包含众多普通用户可用的命令。而命令的本质就是可执行程序，即二进制 bin 文件。 &#x2F;sbin &#x2F;sbin 目录是&#x2F;system bin 的缩写，它的功能类似&#x2F;bin ，不过它存储的一般是系统程序，一般需要使用管理员权限才能使用。ex.sysctl,fdisk,poweroff. &#x2F;etc &#x2F;etc 目录是&#x2F;etcetera 的缩写，据说原始的 Unix 设计是在该目录存放些零碎的内容，但现在该目录现在已发展成存放系统的各种配置文件，非常重要。如用户信息文件&#x2F;etc&#x2F;passwd，系统初始化文件&#x2F;etc&#x2F;rc 等，系统依据这些配置运行。 &#x2F;root &#x2F;root 是超级用户的目录，在 Ubuntu 下默认为空。 &#x2F;home storage users’ files, it contians documents, downloads, pictures, public files etc. &#x2F;lib &#x2F;lib 目录是&#x2F;library 的缩写，根文件系统上的程序所需的共享库，存放了根文件系统程序运行所需的共享文件。如 C 语言标准库，这些文件包含了可被许多程序共享的代码，以避免每个程序都包含有相同的子程序的副本，故可以使得可执行文件变得更小，节省空间。 &#x2F;dev &#x2F;dev 目录存放了设备文件，即设备驱动程序，用户通过这些文件访问外部设备。 &#x2F;proc &#x2F;proc 目录通常包含了内核导出到用户空间的内核信息，通过访问该目录下的文件可以查看这些信息。 sys 与&#x2F;proc 目录类似，&#x2F;sys 目录用于把内核的设备驱动导出到用户空间，可通过访问 sys 目录及其下的文件，来查看甚至控制内核的一些驱动设备。 &#x2F;tmp &#x2F;tmp 目录存放程序在运行时产生的信息和数据。但在引导启动后，运行的程序最好使用&#x2F;var&#x2F;tmp来代替&#x2F;tmp，因为前者可能拥有一个更大的磁盘空间。 &#x2F;boot &#x2F;boot 目录存放引导加载器 (bootstrap loader) 使用的文件，如 lilo，核心映像也经常放在这里，而不是放在根目录中。 &#x2F;mnt &#x2F;mnt 目录是系统管理员临时挂载 (mount) 文件系统的安装点。 &#x2F;media &#x2F;media 目录通常是一些自动挂载的设备目录，如光盘和 U 盘，部分系统会自动挂载到这个目录下，然后通过自动挂载的目录可以访问对应的设备。 &#x2F;usr &#x2F;usr 只专门存放各种程序和数据,其含义已经从“用户目录”变成了“unixsystem resource” Two type of links symbolic links : (also known as “soft links” or “symlinks”): Refer to a symbolic path indicating the abstract location of another file.Soft links are similar to shortcuts, and can point to another file or directory in any file system. hard links : Refer to the specific location of physical data.Hard links are also shortcuts for files and folders, but a hard link cannot be created for a folder or file in a different file system. Difference between the two type : These links behave differently when the source of the link (what is being linked to) is moved or removed. Symbolic links are not updated (they merely contain a string which is the path name of its target); hard links always refer to the source, even if moved or removed. Reference [1]野火 Linux 基础与应用开发实战指南[2]https://www.cyberciti.biz/faqcreating-soft-link-or-symbolic-link/[3]https://www.freecodecamp.org/newssymlink-tutorial-in-linux-how-to-create-and-remove-a-symbolic-link/[4]https://www.geeksforgeeks.org/soft-hard-links-unixlinux/","categories":[],"tags":[]},{"title":"hello world","slug":"hello-world","date":"2022-10-03T07:53:21.000Z","updated":"2022-10-03T08:34:39.952Z","comments":true,"path":"2022/10/03/hello-world/","link":"","permalink":"https://noobnemo.live/2022/10/03/hello-world/","excerpt":"","text":"Hello Worldtitletitle","categories":[],"tags":[]}],"categories":[],"tags":[]}